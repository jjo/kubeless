language: go

os:
  - linux

go:
  - 1.8.3

go_import_path: github.com/kubeless/kubeless

services:
  - docker
env:
  global:
    - CONTROLLER_IMAGE_NAME=bitnami/kubeless-controller
    - CONTROLLER_IMAGE=${CONTROLLER_IMAGE_NAME}:${TRAVIS_TAG:-build-$TRAVIS_BUILD_ID}
    - CGO_ENABLED=0
    - secure: QTXmAe9Z5WkWq8KDvcP5JauyYrYaupywLUQjlE2SJWuD1wvgcQxPlkWF5NpSAL70TqnGhkmCmsfQBdJ+T59/yYjTldfnFumkp1dABdIURFPQc8h7IeF+evSSmwgaGwTc7bRPu9cprH1yflwyAEQmnzKGkT91ZHszZxfyMDFKPcFJhBdz2lcOsJRIetgrMOBS0sguZVnnY08okq6F0DEDk3SYT9RoPN0/NjyerPpxJ7arS2bN02R6ogBZM7LiTUF6aFuA3vaVKZarVBXYL5ZDr0HvHcSuT0T8F+CGDM7KALldOWgrNbDiVLXBliwRpQbxmKMti7gSftym77MYZHvfq7kKWNrJ/CkV0yXIBrvC0+CQ8Q6E7+dx6pD5HRPB4KGTvAJASZPpysDOcLvjIJh6UvCnQ6I0anoIeK3Socm3NQeEYr6gLVOtZfoiIL1D27NgOEtgviEMQ/haNW9x6O6LT4K/j5NAjm/mcW4/h5Z7vJHBnIbEVsXCe5hj8QmoH1hJvkRcgT5eB5E5dCidt+hMed/cD/ERb1XG1fnK6uBHLS3+sm86ZEyMu7/uI2OQkBtvhPthdcPsCB6rnJMdkIg2vq981vlxA7d2uWhhLX8lfhKMKLEhZtNJPBdcXNvo6a5GxbhHWlPIH7wli2be9t/UuZBRuSINnN4HBAXKWD364lo=
before_install:
  - set -e

install:
  - make bootstrap

script:
  - make test
  - make validation
  - make VERSION=${TRAVIS_TAG:-build-$TRAVIS_BUILD_ID} binary
  - |
    if [ "$TRAVIS_OS_NAME" = linux ]; then
      make controller-image CONTROLLER_IMAGE=$CONTROLLER_IMAGE
    fi
  - make all-yaml
  - |
    if [ "$TRAVIS_OS_NAME" = linux ]; then
      export TEST_DEBUG=1
      docker tag $CONTROLLER_IMAGE ${CONTROLLER_IMAGE_NAME}:latest
      make integration-tests
    fi

after_success:
  - |
    if [[ "$TRAVIS_BRANCH" == master && \
          "$TRAVIS_REPO_SLUG" == "kubeless/kubeless" && \
          "$TRAVIS_PULL_REQUEST" == false ]]; then
      docker login -u="$DOCKER_USERNAME" -p="$DOCKER_PASSWORD"
      docker tag $CONTROLLER_IMAGE ${CONTROLLER_IMAGE_NAME}:latest
      docker push ${CONTROLLER_IMAGE_NAME}:latest
    fi

before_deploy:
  - make VERSION=${TRAVIS_TAG:-build-$TRAVIS_BUILD_ID} binary-cross
  - for d in bundles/kubeless_*; do zip -r9 $d.zip $d/; done
  - |
    if [ "$TRAVIS_OS_NAME" = linux ]; then
      docker login -u="$DOCKER_USERNAME" -p="$DOCKER_PASSWORD"
      docker push $CONTROLLER_IMAGE
      NEW_DIGEST=$(./script/find_digest.sh ${CONTROLLER_IMAGE_NAME} ${TRAVIS_TAG} | cut -d " " -f 2)
      OLD_DIGEST=":latest"
      sed 's/'"$OLD_DIGEST"'/'"@$NEW_DIGEST"'/g' kubeless.yaml > kubeless-${TRAVIS_TAG}.yaml
      sed 's/'"$OLD_DIGEST"'/'"@$NEW_DIGEST"'/g' kubeless-rbac.yaml > kubeless-rbac-${TRAVIS_TAG}.yaml
      sed 's/'"$OLD_DIGEST"'/'"@$NEW_DIGEST"'/g' kubeless-openshift.yaml > kubeless-openshift-${TRAVIS_TAG}.yaml
    fi

deploy:
  provider: releases
  api_key:
    secure: rOXYYMxdFrP7mtExHLK+IOwW7LmV8Y7pJjiOx023F/z0HeyJLcFDY4Mvr6n+nIjf8idPnINARYiHH0eBTDAKNsBhpod+QPexO3gy8bWAbZS6c1wQtV6EuKKfDhvsLQdylh+9pBrtC71GMxBzGWKzcs2dxHZULNrjDxqA99JMWpkzJRVcaU0D9c68aUVIXdI90NTEWG+yuAUw+qWaHIDGNDylS3/5DXs+PNV75ExuL3dWxXJQlEK7+l60/0rMNm+VZIX/5T3YE/cfdXoD2wl82umjzNzoBk2emo2MfHtCyxf+XYBEDZeRHZHZSOg3HCOcRmbKKzOLNkvaSMlyT4celiZoOrR1vASbxzJOBcW+QkCoJ5QAxXwZD7KJk0V89AOv6YR2skMbG7a7+tzkeZ8VHZny7VMgrTBi6bYxZDV1+v28Xm0R/GWnot2W/Nk92mHyVyh3XifMrOHTgXb6G6iIpCypj0i6Ktr9p8uZEhUTqcpljAcRQdnMNHaWWPttM5T3IW94iROdymPwo65FJukHQv/h3GjYB0P1jagBZfbcYQNX/wEjZ3tIVknYfXfRlZXTQjj29DAynGTbw8q07iRR2eNiDUQAS54JQnXOewUtmVRo9maIjxUs4XEE3/IsRNXpwMKGCOP+fjHeL8XtDwrRzmw8nS0LcnooKpMCaOYD4hA=
  file_glob: true
  file:
    - kubeless-${TRAVIS_TAG}.yaml
    - kubeless-rbac-${TRAVIS_TAG}.yaml
    - kubeless-openshift-${TRAVIS_TAG}.yaml
    - bundles/kubeless_*.zip
  skip_cleanup: true
  overwrite: true
  on:
    tags: true
    repo: kubeless/kubeless
    condition: $CGO_ENABLED = 0

after_deploy:
  - ./script/upload_release_notes.sh ${TRAVIS_TAG}
